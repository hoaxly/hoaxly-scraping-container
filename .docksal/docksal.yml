# Docker and Docker Compose based environment for Drupal.
# See https://github.com/docksal/docksal for more information and documentation.

# This is a shared configuration file that is intended to be stored in the project repo.
# For local overrides:
# - create .docksal/docksal-local.yml file and put local docker-compose configuration overrides there
# - add .docksal/docksal-local.yml to .gitignore

# Docksal stiches several docker-compose configuration files together.
# Run "fin config" to see which files are involved and the resulting configration.

version: "2.1"

services:

  hoaxly-storage-container:
    container_name: storage-container
    hostname: hoaxly-storage-container
    image: registry.acolono.net:444/hoaxly/hoaxly-storage-container:develop
    hostname: storage-container
    mem_limit: 3g
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    labels:
      - io.docksal.virtual-host=storage-container.${VIRTUAL_HOST}
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - esdata2:/usr/share/elasticsearch/data

  # CLI
  # Used for all python commandline tools that are not necessary for the actual scrapy container that may not exist on the host machine.
  hoaxly-python-cli:
    hostname: python-cli-container
    container_name: cli
    image: python:3.6
    volumes:
      # Project root volume
      - project_root:/var/www:rw,nocopy
      # Shared ssh-agent socket
      - docksal_ssh_agent:/.ssh-agent:ro
    stdin_open: true
    tty: true
    working_dir: '/var/www/scrapy_projects/'
    command: [ "/bin/bash" ]
    labels:
      - io.docksal.virtual-host=cli.${VIRTUAL_HOST}
    environment:
      - HOST_UID
      - HOST_GID
      - DOCROOT
      - XDEBUG_ENABLED=${XDEBUG_ENABLED:-0}
    dns:
      - ${DOCKSAL_DNS1}
      - ${DOCKSAL_DNS2}


  # demo elasticsearch frontend php search interface
  # web:
  #   image: registry.acolono.net:444/hoaxly/hoaxly-vanillasearch-nginx
  #   ports:
  #     - "8080:80"
  #   labels:
  #     - io.docksal.virtual-host=search.${VIRTUAL_HOST}
  #     - io.docksal.project-root=${PROJECT_ROOT}
  #   depends_on:
  #     - php
  #   environment:
  #     - APP_ES_HOST=elastic
  #     - APP_ES_PORT=9200
  #     - APP_LOG_FILE=/vanillasearch.log

  # php:
  #   image: registry.acolono.net:444/hoaxly/hoaxly-vanillaphp:latest


  # inspect index with this container once you have data in elasticsearch
  # kibana:
  #   image: docker.elastic.co/kibana/kibana:5.4.0
  #   mem_limit: 1024m
  #   ports:
  #     - "5601:5601"
  #   depends_on:
  #     - elastic
  #   environment:
  #     - ELASTICSEARCH_URL=http://elastic:9200
  hoaxly-scraping-container:
    container_name: scrapydaemon
#    hostname: scrapydaemon.hoaxly.docksal
    image: registry.acolono.net:444/hoaxly/hoaxly-scrapydaemon-container:develop
    ports:
      - "6800:6800"
    volumes:
      - ${PROJECT_ROOT}/portia_projects/packages:/packages
      - ${PROJECT_ROOT}/portia_projects/requirements.txt:/requirements.txt
    labels:
      - io.docksal.virtual-host=scrapydaemon.${VIRTUAL_HOST}
    dns:
      - ${DOCKSAL_DNS1}
      - ${DOCKSAL_DNS2}

# enable this container to build new spiders
  hoaxly-spiderbreeder-container:
    container_name: hoaxly-spiderbreeder-container
    #hostname: spiderbreeder
    image: registry.acolono.net:444/hoaxly/hoaxly-scraping-container:develop
    # use this to build image locally for working on the image
    #build: ${PROJECT_ROOT}
    tty: true
    mem_limit: 1024m
    ports:
      - "9001:9001"
    labels:
      - io.docksal.virtual-host=portia.${VIRTUAL_HOST}
    volumes:
      # when working on spiders mount here
      - ${PROJECT_ROOT}/portia_projects:/app/data/projects:rw
      # when working on the helpers mount them here
      #- ${PROJECT_ROOT}/portia_projects/packages:/app/data/packages:rw
      # when testing manual runs to file mount this
      #- ${PROJECT_ROOT}/example-output:/app/data/example-output:rw

  hoaxly-api-container:
    container_name: hoaxly-api-container
    hostname: hoaxly-api-container
    image: registry.acolono.net:444/hoaxly/hoaxly-api-container:latest
    build: ./
    environment:
      NODE_ENV: development
    ports:
      - "3000:3000"

volumes:
  esdata2:
    driver: local
