#!/usr/bin/env bash

## Initialize Docksal powered Drupal 8 site
##
## Usage: fin init

# Abort if anything fails
set -e

#-------------------------- Settings --------------------------------

# PROJECT_ROOT is passed from fin.
# The following variables are configured in the '.env' file: DOCROOT, SITE_DIRECTORY, SOURCE_ALIAS and others.

DOCROOT_PATH="${PROJECT_ROOT}/${DOCROOT}"
SITEDIR_PATH="${DOCROOT_PATH}/sites/${SITE_DIRECTORY}"
#-------------------------- END: Settings --------------------------------

#-------------------------- Helper functions --------------------------------

# Console colors
red='\033[0;31m'
green='\033[0;32m'
green_bg='\033[42m'
yellow='\033[1;33m'
NC='\033[0m'

echo-red () { echo -e "${red}$1${NC}"; }
echo-green () { echo -e "${green}$1${NC}"; }
echo-green-bg () { echo -e "${green_bg}$1${NC}"; }
echo-yellow () { echo -e "${yellow}$1${NC}"; }

if_failed ()
{
  if [ ! $? -eq 0 ]; then
    if [[ "$1" == "" ]]; then msg="an error occurred"; else msg="$1"; fi
    echo-red "$msg";
    exit 1;
  fi
}

is_windows ()
{
  local res=$(uname | grep 'CYGWIN_NT')
  if [[ "$res" != "" ]]; then
    return 0
  else
    return 1
  fi
}

# Copy a settings file.
# Skips if the destination file already exists.
# @param $1 source file
# @param $2 destination file
copy_settings_file()
{
  local source="$1"
  local dest="$2"

  if [[ ! -f $dest ]]; then
    echo "Copying ${dest}..."
    cp $source $dest
  else
    echo-yellow "${dest} already in place."
  fi
}

#-------------------------- END: Helper functions --------------------------------

#-------------------------- Functions --------------------------------

install_python_helpers () {
  echo -e "${green_bg} init ${NC}${green} installing python requirements ...${NC}"
  cd $PROJECT_ROOT
  # install scrapyd client in our cli container
docker exec  -ti cli pip install https://github.com/scrapy/scrapyd-client/archive/master.zip
  # install our own helper package in scrapyd container even though it should already be installed in the docker container but this allows installing it as [editable](https://pip.pypa.io/en/stable/reference/pip_install/#editable-installs)
docker exec -ti scrapydaemon pip install --editable /app/data/projects/packages
}

remove_xpack () {
  echo -e "${green_bg} init ${NC}${green} removing xpack ...${NC}"

  cd $PROJECT_ROOT
  docker exec hoaxlyscrapingcontainer_hoaxly-storage-container_1 bin/elasticsearch-plugin remove x-pack
  # when you are using kibana this will have to be run too.
  #docker exec hoaxly_kibana_1 bin/kibana-plugin remove x-pack

}
#-------------------------- END: Functions --------------------------------

#-------------------------- Execution --------------------------------

if [[ "$PROJECT_ROOT" == "" ]]; then
  echo-red "\$PROJECT_ROOT is not set"
  exit 1
fi


if [[ $DOCKER_RUNNING == "true" ]]; then
  echo -e "${green_bg} Step 1 ${NC}${green} Recreating services...${NC}"
  fin reset -f
else
  echo -e "${green_bg} Step 1 ${NC}${green} Creating services...${NC}"
  fin up
fi

if is_windows; then
  echo-green "Add ${VIRTUAL_HOST} to your hosts file (/etc/hosts), e.g.:"
  echo-green "192.168.64.100  ${VIRTUAL_HOST}"
  echo
fi


install_python_helpers

echo -en "${green_bg} DONE! ${NC} "
echo -e "check your containers started by running fin status"
echo -e "And see README.md for scraping instructions."



#-------------------------- END: Execution --------------------------------
